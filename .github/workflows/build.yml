#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build-Images-Push-Docker
on:
  push:
    tags:
      - "v*"
    branches:
      - main
      - release-*
      - feat-*
      - bugfix-*
      - feat/*

jobs:

  get-timestamp:
    name: Get build timestamp
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.ts.outputs.timestamp }}
    steps:
      - name: Get build timestamp
        id: ts
        run: echo "timestamp=$(date '+%y%m%d_%H%M')" >> $GITHUB_OUTPUT

  build-and-push-to-gar:
    name: Build & push to gcloud artifact registry
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get short sha
        id: get_short_sha
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get push tags
        id: get_push_tags
        run: |
          image_name=${{ vars.GAR_URL }}/${{ vars.GAR_REPOSITORY }}/devlake
          echo "TAGS=${image_name}:${{ steps.get_short_sha.outputs.SHORT_SHA }}" >> $GITHUB_OUTPUT

      - name: Build & push to GAR
        uses: RafikFarhad/push-to-gcr-github-action@v5-rc1
        with:
          gcloud_service_key: "${{ secrets.GCLOUD_SERVICE_KEY }}"
          registry: "${{ vars.GAR_URL }}"
          project_id: "${{ vars.GAR_REPOSITORY }}"
          image_name: devlake
          image_tag: ${{ steps.get_push_tags.outputs.TAGS }}
          dockerfile: ./backend/Dockerfile
          context: ./backend
          platforms: linux/amd64
